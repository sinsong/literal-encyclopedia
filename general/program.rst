程序
====

程序是一种非常抽象的概念，其实际意义应该非常依赖与之相应的执行模型，下面尝试抽象的描述什么是程序：

.. admonition:: 梦话
    :class: attention

    计算机程序 (program) 是能被相应处理器识别，理解，执行，指示处理器如何行动的一系列抽象信息。

    这里处理器包括硬件（CPU）、软件（命令解释程序/Shell）、或者假想的处理器（伪代码描述的）；抽象信息包括指令和数据，信息的表示包括指令编码，数据编码，执行模型，等。

常见描述
----------

对于常见的描述，wiki 上的：

    计算机程序（英语：Computer Program）是指一组指示电子计算机或其他具有消息处理能力的电子设备每一步动作的指令，通常用某种程序设计语言编写，运行于某种目标体系结构上。

    -- `计算机程序 （wiki） <https://zh.wikipedia.org/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A8%8B%E5%BA%8F>`_

其中的“通常用某种程序设计语言编写”不能认同，我认为程序设计语言也好，机器语言也好，都属于程序的一种。

而对于百度百科的:

    计算机程序是一组计算机能识别和执行的指令，运行于电子计算机上，满足人们某种需求的信息化工具。

    -- `程序（百度百科） <https://baike.baidu.com/item/%E7%A8%8B%E5%BA%8F/13831935>`_

好像合理很多，但是后面的一句 “程序是一个指令序列”，说的就或许有失偏颇。

程序设计语言
-------------------

可简称为编程语言、语言。

.. admonition:: 梦话
    :class: attention

    以人类为中心设计，用于表达程序行为的形式语言。

底层/系统编程语言
-----------------------

.. admonition:: 梦话
    :class: attention

    有能力表达 bare metal 执行环境上的程序的编程语言。

常见的例子包括：

- 汇编语言
- C / C++
- Rust

沙箱化编程语言
-------------------

常见的例子包括：

- js
- 脚本语言

机器语言
----------------

.. admonition:: 梦话
    :class: attention

    相应处理器使用的，指定处理器如何行为的信息表示法。

讨论下机器语言和汇编语言：

我认为汇编不算机器语言。
机器语言特指能喂给处理器的信息（常见为二进制/字节序列），而虽然汇编与机器语言几乎一一对应，相比于机器语言，汇编仍然少了能让程序能够执行下去的一些信息。
比如汇编也可以分文件写的，本质上还是一种代码片段，生成对象文件 ``.o`` 时会处理内部引用，并且留下外部引用信息供链接器处理。
链接器还可能对这些代码片段进行重新定位，在这之前汇编语言表达的程序仍然存在一定抽象。
而且汇编语言也是供人类使用的，其中包含符号代表的绝对引用，和一些语法表达的相对引用，汇编器会进行一定的处理。

